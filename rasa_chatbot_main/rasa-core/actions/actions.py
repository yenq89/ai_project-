# This files contains your custom actions which can be used to run
# custom Python code.
#
# See this guide on how to implement these action:
# https://rasa.com/docs/rasa/custom-actions


# This is a simple example for a custom action which utters "Hello World!"
from typing import Any, Text, Dict, List
from deep_translator import GoogleTranslator

from rasa_sdk import Action, Tracker
from rasa_sdk.events import SlotSet
from rasa_sdk.executor import CollectingDispatcher
import requests
from datetime import datetime, timedelta


#
#



class action_get_weather(Action):

    # def translate_weather(weather):
    #     if weather == 'Clear':
    #         return 'quang ƒë√£ng'
    #     elif weather == 'Clouds':
    #         return 'c√≥ m√¢y'
    #     elif weather == 'Rain':
    #         return 'm∆∞a'
    #     elif weather == 'Thunderstorm':
    #         return 'b√£o'
    #     elif weather == 'Snow':
    #         return 'tuy·∫øt'
    #     elif weather == 'Mist':
    #         return 's∆∞∆°ng m√π'
    #     elif weather == 'Drizzle':
    #         return 'm∆∞a ph√πn'
    #     elif weather == 'Wind':
    #         return 'gi√≥ m·∫°nh'
    #     else:
    #         return weather  # Tr·∫£ l·∫°i nguy√™n vƒÉn n·∫øu kh√¥ng t√¨m th·∫•y ƒëi·ªÅu ki·ªán
    #
    # def translate_descripption(description):
    #     if description == 'clear sky':
    #         return 'quang ƒë√£ng'
    #     elif description == 'few clouds':
    #         return 'm√¢y th∆∞a'
    #     elif description == 'scattered clouds':
    #         return 'm√¢y r·∫£i r√°c'
    #     elif description == 'broken clouds':
    #         return 'm√¢y ƒëan xen'
    #     elif description == 'overcast clouds':
    #         return 'm√¢y ph·ªß k√≠n'
    #     elif description == 'light rain':
    #         return 'm∆∞a nh·∫π'
    #     elif description == 'moderate rain':
    #         return 'm∆∞a v·ª´a'
    #     elif description == 'heavy rain':
    #         return 'm∆∞a to'
    #     elif description == 'very heavy rain':
    #         return 'm∆∞a r·∫•t to'
    #     elif description == 'extreme rain':
    #         return 'm∆∞a c·ª±c k·ª≥ to'
    #     elif description == 'freezing rain':
    #         return 'm∆∞a tuy·∫øt'
    #     elif description == 'light snow':
    #         return 'tuy·∫øt nh·∫π'
    #     elif description == 'moderate snow':
    #         return 'tuy·∫øt v·ª´a'
    #     elif description == 'heavy snow':
    #         return 'tuy·∫øt d√†y'
    #     elif description == 'thunderstorm':
    #         return 'b√£o'
    #     elif description == 'light thunderstorm':
    #         return 'b√£o nh·∫π'
    #     elif description == 'heavy thunderstorm':
    #         return 'b√£o l·ªõn'
    #     elif description == 'fog':
    #         return 's∆∞∆°ng m√π'
    #     elif description == 'drizzle':
    #         return 'm∆∞a ph√πn'
    #     elif description == 'haze':
    #         return 'kh√≥i b·ª•i'
    #     else:
    #         return description  # Tr·∫£ l·∫°i nguy√™n vƒÉn n·∫øu kh√¥ng t√¨m th·∫•y m√¥ t·∫£
    def name(self) -> Text:
        return "action_get_weather"

    def run(self, dispatcher: CollectingDispatcher,
            tracker: Tracker,
            domain: Dict[Text, Any]) -> List[Dict[Text, Any]]:

        # ƒê·∫∑t gi√° tr·ªã c·ªßa api_key l√† kh√≥a API cho OpenWeather API, d√πng ƒë·ªÉ truy c·∫≠p th√¥ng tin th·ªùi ti·∫øt
        api_key = 'e7c0da0d1e27ebd35e173a262333b74f'
        loc = tracker.get_slot('location')
        forecastPeriod = tracker.get_slot('forecast_period')
        weatherType = tracker.get_slot('weather_type')
        guess = tracker.get_slot('guess')

        response = ''
        today = datetime.now()
        tomorrow = str(today + timedelta(days=1))
        next2Day = str(today + timedelta(days=2))
        if not loc:  # N·∫øu trong c√¢u kh√¥ng c√≥ ƒë·ªãa ƒëi·ªÉm
            response = "B·∫°n mu·ªën bi·∫øt v·ªÅ th·ªùi ti·∫øt t·∫°i ƒë·ªãa ƒëi·ªÉm n√†o?"
        else:
            dispatcher.utter_message(text=f'ƒê·ªãa ƒëi·ªÉm: {loc}')
            # s·ª≠ d·ª•ng API l·∫•y to·∫° ƒë·ªô
            coordinates = requests.get(
                'http://api.openweathermap.org/geo/1.0/direct?q={}&limit=1&appid={}'.format(loc, api_key)).json()
            lat = round(coordinates[0]['lat'], 2)
            lon = round(coordinates[0]['lon'], 2)
            if coordinates:
                # s·ª≠ d·ª•ng API ƒë·ªÉ d·ª± b√°o th·ªùi ti·∫øt
                weathers = requests.get(
                    'http://api.openweathermap.org/data/2.5/forecast?lat={}&lon={}&appid={}'.format(lat, lon,
                                                                                                    api_key)).json()
                # s·ª≠ d·ª•ng API l·∫•y d·ªØ li·ªáu th·ªùi ti·∫øt hi·ªán t·∫°i
                current = requests.get(
                    'http://api.openweathermap.org/data/2.5/weather?q={}&appid={}'.format(loc, api_key)).json()
                # country = weathers['city']['country']
                city = loc

                if weathers:

# -------------------------------------------------------D·ª± b√°o th·ªùi ti·∫øt cho h√¥m nay ----------------------------------------------------------------------#

                    if forecastPeriod is None or forecastPeriod == 'h√¥m nay':
                        ##current

                        # L·∫•y th√¥ng tin th·ªùi ti·∫øt
                        conditionCurrent = current['weather'][0]['main'] # D·ªãch
                        conditionDesc = current['weather'][0]['description'] # D·ªãch
                        temperature_cCurrent = round(current['main']['temp'] - 273.15, 2)
                        feelLike = round(current['main']['feels_like'] - 273.15, 2)
                        humidityCurrent = current['main']['humidity']
                        wind_mphCurrent = current['wind']['speed']

                        if weatherType is None or weatherType == 'th·ªùi ti·∫øt':
                            response = GoogleTranslator(source='en', target='vi').translate("""It is currently {} in {} at the moment. The temperature is {} degrees in C, feel like {}, the humidity is {}% and the wind speed is {} mph."""
                                                                                            .format(conditionCurrent, city, temperature_cCurrent, feelLike, humidityCurrent, wind_mphCurrent))
                        elif weatherType == 'nhi·ªát ƒë·ªô':
                            response = """Nhi·ªát ƒë·ªô hi·ªán t·∫°i l√† {} ƒë·ªô C, c·∫£m gi√°c nh∆∞ {}""".format(temperature_cCurrent,
                                                                                                  feelLike)
                        elif weatherType == 'ƒë·ªô ·∫©m':
                            response = """ƒê·ªô ·∫©m hi·ªán t·∫°i l√† {}%""".format(humidityCurrent)
                        elif weatherType == 'gi√≥':
                            response = """T·ªëc ƒë·ªô gi√≥ h√¥m nay l√† {} mph v·ªõi g√≥c gi√≥ l√† {} v√† gi√≥ m·∫°nh {}""".format(
                                wind_mphCurrent, current['wind']['deg'], current['wind']['gust'])
                        elif weatherType == 'n·∫Øng':
                            if conditionCurrent == 'Rain':
                                response = f"""Kh√¥ng, h√¥m nay tr·ªùi kh√¥ng n·∫Øng, tr·ªùi {conditionDesc}"""
                            if conditionDesc == 'clear sky':
                                response = """H√¥m nay tr·ªùi n·∫Øng, b·∫°n n√™n s·ª≠ d·ª•ng kem ch·ªëng n·∫Øng khi ra ngo√†i üòâ"""
                            elif conditionDesc == 'few clouds' or conditionDesc =='scattered clouds':
                                response = """Hmmm, tr·ªùi c√≥ v·∫ª kh√¥ng n·∫Øng, c√≥ th·ªÉ m·ªôt ch√∫t v√¨ h√¥m nay c√≥ m√¢y r·∫£i r√°c üòâ"""
                            else:
                                response = f"""Kh√¥ng, h√¥m nay tr·ªùi kh√¥ng n·∫Øng, n√≥ {conditionDesc}"""
                        elif weatherType == 'Rain':
                            if conditionCurrent == 'Rain':
                                if conditionDesc == 'light rain':
                                    response = """V√¢ng, th·ªùi ti·∫øt h√¥m nay c√≥ m∆∞a nh∆∞ng l√† m∆∞a nh·∫π, b·∫°n c√≥ th·ªÉ mang theo √¥ ‚òî"""
                                elif conditionDesc == 'moderate rain':
                                    response = """V√¢ng, th·ªùi ti·∫øt h√¥m nay c√≥ m∆∞a v·ªõi m∆∞a v·ª´a, b·∫°n n√™n mang theo √°o m∆∞a v√† di chuy·ªÉn c·∫©n th·∫≠n n·∫øu ra ngo√†i üò≠"""
                                else:
                                    response = """V√¢ng, th·ªùi ti·∫øt h√¥m nay c√≥ m∆∞a, b·∫°n n√™n mang theo √°o m∆∞a v√† di chuy·ªÉn c·∫©n th·∫≠n n·∫øu ra ngo√†i üò≠"""
                            elif conditionCurrent == "Clouds":
                                if conditionDesc == 'broken clouds' or conditionDesc == 'overcast clouds':
                                    response = f"""Th·ªùi ti·∫øt h√¥m nay c√≥ kh·∫£ nƒÉng s·∫Ω m∆∞a v·ªõi {conditionDesc}, b·∫°n n√™n mang theo √¥"""
                                else:
                                    response = f"""Kh√¥ng, h√¥m nay tr·ªùi kh√¥ng m∆∞a, tr·ªùi {conditionDesc}"""
                            else:
                                response = f"""Kh√¥ng, h√¥m nay tr·ªùi kh√¥ng m∆∞a, tr·ªùi {conditionDesc}"""

# -------------------------------------------------------D·ª± b√°o th·ªùi ti·∫øt cho ng√†y mai ----------------------------------------------------------------------#

                    elif forecastPeriod == 'ng√†y mai':
                        ##tomorrow
                        tomorrows = [item for item in weathers['list'] if tomorrow[0:10] in item['dt_txt']]
                        morning = [item for item in tomorrows if item['dt_txt'][11:] == '09:00:00']
                        afternoon = [item for item in tomorrows if item['dt_txt'][11:] == '15:00:00']
                        evening = [item for item in tomorrows if item['dt_txt'][11:] == '21:00:00']
                        conditionCurrent = afternoon[0]['weather'][0]['main']
                        conditionDesc = afternoon[0]['weather'][0]['description']
                        if weatherType is None or weatherType == 'th·ªùi ti·∫øt':
                            response = ("""Th·ªùi ti·∫øt ng√†y mai t·∫°i {}: \n
                            - Bu·ªïi s√°ng s·∫Ω {} v·ªõi {}: nhi·ªát ƒë·ªô l√† {} ƒë·ªô, ƒë·ªô ·∫©m l√† {}% v√† t·ªëc ƒë·ªô gi√≥ l√† {} mph. \n
                            - Bu·ªïi chi·ªÅu s·∫Ω c·∫£m th·∫•y {} v·ªõi {}: nhi·ªát ƒë·ªô l√† {} ƒë·ªô, ƒë·ªô ·∫©m l√† {}% v√† t·ªëc ƒë·ªô gi√≥ l√† {} mph. \n
                            - Bu·ªïi t·ªëi s·∫Ω gi·ªëng nh∆∞ {} v·ªõi {}: nhi·ªát ƒë·ªô l√† {} ƒë·ªô, ƒë·ªô ·∫©m l√† {}% v√† t·ªëc ƒë·ªô gi√≥ l√† {} mph. \n
                            """.format(city, morning[0]['weather'][0]['main'],
                                           morning[0]['weather'][0]['description'],
                                           round(morning[0]['main']['temp'] - 273.15, 2),
                                           morning[0]['main']['humidity'], morning[0]['wind']['speed'],
                                           afternoon[0]['weather'][0]['main'],
                                           afternoon[0]['weather'][0]['description'],
                                           round(afternoon[0]['main']['temp'] - 273.15, 2),
                                           afternoon[0]['main']['humidity'], afternoon[0]['wind']['speed'],
                                           evening[0]['weather'][0]['main'], evening[0]['weather'][0]['description'],
                                           round(evening[0]['main']['temp'] - 273.15, 2),
                                           evening[0]['main']['humidity'], evening[0]['wind']['speed']))
                        elif weatherType == 'nhi·ªát ƒë·ªô':
                            response = """Nhi·ªát ƒë·ªô v√†o s√°ng ng√†y mai l√† {} ƒë·ªô C, bu·ªïi chi·ªÅu l√† {} v√† bu·ªïi t·ªëi l√† {}""".format(
                                round(morning[0]['main']['temp'] - 273.15, 2),
                                round(afternoon[0]['main']['temp'] - 273.15, 2),
                                round(evening[0]['main']['temp'] - 273.15, 2))
                        elif weatherType == 'ƒë·ªô ·∫©m':
                            response = """ƒê·ªô ·∫©m ng√†y mai l√† {}% v√†o bu·ªïi s√°ng, {}% v√†o bu·ªïi chi·ªÅu v√† bu·ªïi t·ªëi l√† {}%""".format(
                                morning[0]['main']['humidity'], afternoon[0]['main']['humidity'],
                                evening[0]['main']['humidity'])
                        elif weatherType == 'gi√≥':
                            response = """T·ªëc ƒë·ªô gi√≥ ng√†y mai l√† {} mph v·ªõi g√≥c gi√≥ l√† {} v√† gi√≥ m·∫°nh l√† {} v√†o bu·ªïi s√°ng, l√† {} mph v·ªõi g√≥c gi√≥ l√† {} v√† gi√≥ m·∫°nh l√† {} v√†o bu·ªïi chi·ªÅu v√† cu·ªëi c√πng: {} mph v·ªõi g√≥c gi√≥ l√† {} v√† gi√≥ m·∫°nh l√† {} v√†o bu·ªïi t·ªëi""".format(
                                morning[0]['wind']['speed'], morning[0]['wind']['deg'], morning[0]['wind']['gust'],
                                afternoon[0]['wind']['speed'], afternoon[0]['wind']['deg'],
                                afternoon[0]['wind']['gust'], evening[0]['wind']['speed'], evening[0]['wind']['deg'],
                                evening[0]['wind']['gust'])
                        elif weatherType == 'n·∫Øng':
                            if conditionCurrent == 'Rain':
                                response = f"""Kh√¥ng, ng√†y mai tr·ªùi kh√¥ng n·∫Øng, m√† tr·ªùi {conditionDesc}"""
                            if conditionDesc == 'clear sky':
                                response = """H√¥m nay tr·ªùi n·∫Øng, b·∫°n n√™n s·ª≠ d·ª•ng kem ch·ªëng n·∫Øng khi ra ngo√†i üòâ"""
                            elif conditionDesc == 'few clouds' or conditionDesc == 'scattered clouds':
                                response = """Hmmm, ng√†y mai tr·ªùi kh√¥ng ho√†n to√†n n·∫Øng, c√≥ th·ªÉ m·ªôt ch√∫t v√¨ c√≥ m√¢y r·∫£i r√°c üòâ"""
                            else:
                                response = f"""Kh√¥ng, ng√†y mai tr·ªùi kh√¥ng n·∫Øng, tr·ªùi {conditionDesc}"""
                        elif weatherType == 'm∆∞a':
                            if conditionCurrent == 'Rain':
                                if conditionDesc == 'light rain':
                                    response = """V√¢ng, th·ªùi ti·∫øt ng√†y mai c√≥ m∆∞a nh∆∞ng l√† m∆∞a nh·∫π, b·∫°n n√™n mang theo √¥ ‚òî"""
                                elif conditionDesc == 'moderate rain':
                                    response = """V√¢ng, th·ªùi ti·∫øt ng√†y kia c√≥ m∆∞a v·ªõi m∆∞a v·ª´a, b·∫°n n√™n mang theo √°o m∆∞a v√† di chuy·ªÉn c·∫©n th·∫≠n n·∫øu ra ngo√†i üò≠"""
                                else:
                                    response = """V√¢ng, th·ªùi ti·∫øt ng√†y mai c√≥ m∆∞a, b·∫°n n√™n mang theo √°o m∆∞a v√† di chuy·ªÉn c·∫©n th·∫≠n n·∫øu ra ngo√†i üò≠"""
                            elif conditionCurrent == "Clouds":
                                if conditionDesc == 'broken clouds' or conditionDesc == 'overcast clouds':
                                    response = f"""Th·ªùi ti·∫øt ng√†y mai c√≥ kh·∫£ nƒÉng s·∫Ω m∆∞a v·ªõi {conditionDesc}, b·∫°n n√™n mang theo √¥"""
                                else:
                                    response = f"""Kh√¥ng, ng√†y mai kh√¥ng c√≥ m∆∞a, m√† l√† {conditionDesc}"""
                            else:
                                response = f"""Kh√¥ng, ng√†y mai kh√¥ng m∆∞a, m√† l√† {conditionDesc}"""

# -------------------------------------------------------D·ª± b√°o th·ªùi ti·∫øt cho hai ng√†y t·ªõi ----------------------------------------------------------------------#
                    elif forecastPeriod == 'hai ng√†y t·ªõi':
                        tomorrows = [item for item in weathers['list'] if tomorrow[0:10] in item['dt_txt']]
                        afternoonTomorrow = [item for item in tomorrows if item['dt_txt'][11:] == '15:00:00']
                        conditionTomor = afternoonTomorrow[0]['weather'][0]['main']
                        conditionTomorDesc = afternoonTomorrow[0]['weather'][0]['description']
                        ##next 2 days 
                        next2Days = [item for item in weathers['list'] if next2Day[0:10] in item['dt_txt']]
                        morning = [item for item in next2Days if item['dt_txt'][11:] == '09:00:00']
                        afternoon = [item for item in next2Days if item['dt_txt'][11:] == '15:00:00']
                        evening = [item for item in next2Days if item['dt_txt'][11:] == '21:00:00']
                        conditionCurrent = afternoon[0]['weather'][0]['main']
                        conditionDesc = afternoon[0]['weather'][0]['description']

                        if guess == '' or guess is None:
                            if weatherType is None:
                                response = """Th·ªùi ti·∫øt ng√†y kia ·ªü {}: \n
                            - Bu·ªïi s√°ng s·∫Ω l√† {} v·ªõi {}: nhi·ªát ƒë·ªô l√† {} ƒë·ªô C, ƒë·ªô ·∫©m l√† {}% v√† t·ªëc ƒë·ªô gi√≥ l√† {} mph. \n
                            - Bu·ªïi chi·ªÅu s·∫Ω c·∫£m th·∫•y {} v·ªõi {}: nhi·ªát ƒë·ªô l√† {} ƒë·ªô C, ƒë·ªô ·∫©m l√† {}% v√† t·ªëc ƒë·ªô gi√≥ l√† {} mph. \n
                            - Bu·ªïi t·ªëi s·∫Ω l√† {} v·ªõi {}: nhi·ªát ƒë·ªô l√† {} ƒë·ªô C, ƒë·ªô ·∫©m l√† {}% v√† t·ªëc ƒë·ªô gi√≥ l√† {} mph.
                            """.format(city, morning[0]['weather'][0]['main'], morning[0]['weather'][0]['description'],
                                       round(morning[0]['main']['temp'] - 273.15, 2), morning[0]['main']['humidity'],
                                       morning[0]['wind']['speed'], afternoon[0]['weather'][0]['main'],
                                       afternoon[0]['weather'][0]['description'],
                                       round(afternoon[0]['main']['temp'] - 273.15, 2),
                                       afternoon[0]['main']['humidity'], afternoon[0]['wind']['speed'],
                                       evening[0]['weather'][0]['main'], evening[0]['weather'][0]['description'],
                                       round(evening[0]['main']['temp'] - 273.15, 2), evening[0]['main']['humidity'],
                                       evening[0]['wind']['speed'])
                            elif weatherType == 'nhi·ªát ƒë·ªô':
                                response = """Nhi·ªát ƒë·ªô v√†o ng√†y kia bu·ªïi s√°ng l√† {} ƒë·ªô C, bu·ªïi chi·ªÅu l√† {} v√† bu·ªïi t·ªëi l√† {}""".format(
                                    round(morning[0]['main']['temp'] - 273.15, 2),
                                    round(afternoon[0]['main']['temp'] - 273.15, 2),
                                    round(evening[0]['main']['temp'] - 273.15, 2))
                            elif weatherType == 'ƒë·ªô ·∫©m':
                                response = """ƒê·ªô ·∫©m v√†o ng√†y kia l√† {}% bu·ªïi s√°ng, {}% bu·ªïi chi·ªÅu v√† bu·ªïi t·ªëi l√† {}%""".format(
                                    morning[0]['main']['humidity'], afternoon[0]['main']['humidity'],
                                    evening[0]['main']['humidity'])
                            elif weatherType == 'gi√≥':
                                response = """Gi√≥ v√†o ng√†y kia l√† {} mph v·ªõi g√≥c gi√≥ l√† {} v√† gi√≥ m·∫°nh l√† {} bu·ªïi s√°ng, l√† {} mph v·ªõi g√≥c gi√≥ l√† {} v√† gi√≥ m·∫°nh l√† {} bu·ªïi chi·ªÅu, v√† cu·ªëi c√πng l√† {} mph v·ªõi g√≥c gi√≥ l√† {} v√† gi√≥ m·∫°nh l√† {} bu·ªïi t·ªëi""".format(
                                    morning[0]['wind']['speed'], morning[0]['wind']['deg'], morning[0]['wind']['gust'],
                                    afternoon[0]['wind']['speed'], afternoon[0]['wind']['deg'],
                                    afternoon[0]['wind']['gust'], evening[0]['wind']['speed'],
                                    evening[0]['wind']['deg'], evening[0]['wind']['gust'])
                            elif weatherType == 'n·∫Øng':
                                if conditionCurrent == 'Rain':
                                    response = f"""Kh√¥ng, ng√†y kia kh√¥ng n·∫Øng, tr·ªùi {conditionDesc}"""
                                if conditionDesc == 'clear sky':
                                    response = """V√¢ng, th·ªùi ti·∫øt ng√†y kia n·∫Øng, b·∫°n n√™n d√πng kem ch·ªëng n·∫Øng n·∫øu ra ngo√†i üòâ"""
                                elif conditionDesc == 'few clouds' or conditionDesc == 'scattered clouds':
                                    response = """Hmmm, kh√¥ng ho√†n to√†n n·∫Øng v√†o ng√†y kia, c√≥ th·ªÉ l√† m·ªôt ch√∫t v√¨ tr·ªùi c√≥ m√¢y r·∫£i r√°c üòâ"""
                                else:
                                    response = f"""Kh√¥ng, ng√†y kia kh√¥ng n·∫Øng, tr·ªùi {conditionDesc}"""
                            elif weatherType == 'm∆∞a':
                                if conditionCurrent == 'Rain':
                                    if conditionDesc == 'light rain':
                                        response = """V√¢ng, th·ªùi ti·∫øt ng√†y kia c√≥ m∆∞a nh·∫π, b·∫°n c√≥ th·ªÉ mang theo √¥ ‚òî"""
                                    elif conditionDesc == 'moderate rain':
                                        response = """V√¢ng, th·ªùi ti·∫øt ng√†y kia c√≥ m∆∞a v·ª´a, b·∫°n n√™n mang √°o m∆∞a v√† di chuy·ªÉn c·∫©n th·∫≠n n·∫øu ra ngo√†i üò≠"""
                                    else:
                                        response = """V√¢ng, th·ªùi ti·∫øt ng√†y kia c√≥ m∆∞a, b·∫°n n√™n mang √°o m∆∞a v√† di chuy·ªÉn c·∫©n th·∫≠n n·∫øu ra ngo√†i üò≠"""
                                elif conditionCurrent == "Clouds":
                                    if conditionDesc == 'broken clouds' or conditionDesc == 'overcast clouds':
                                        response = f"""Th·ªùi ti·∫øt ng√†y kia c√≥ kh·∫£ nƒÉng s·∫Ω m∆∞a v·ªõi {conditionDesc}, b·∫°n n√™n mang theo √¥"""
                                    else:
                                        response = f"""Kh√¥ng, ng√†y kia kh√¥ng c√≥ m∆∞a, tr·ªùi l√† {conditionDesc}"""
                                else:
                                    response = f"""Kh√¥ng, ng√†y kia kh√¥ng c√≥ m∆∞a, tr·ªùi l√† {conditionDesc}"""

                        else:
                            if weatherType == 'm∆∞a':
                                if conditionTomor == 'Rain':
                                    response = f"""Ng√†y mai s·∫Ω c√≥ m∆∞a ({afternoonTomorrow[0]['dt_txt'][0:10]}), b·∫°n c√≥ th·ªÉ mang theo √¥ ‚òî"""
                                elif conditionCurrent == 'Rain':
                                    response = f"""Ng√†y kia s·∫Ω c√≥ m∆∞a ({afternoon[0]['dt_txt'][0:10]}), b·∫°n c√≥ th·ªÉ mang theo √¥ ‚òî"""
                                elif conditionCurrent == 'Rain' and conditionTomor == 'Rain':
                                    response = f"""C·∫£ hai ng√†y s·∫Ω c√≥ m∆∞a, b·∫°n c√≥ th·ªÉ mang theo √¥ ‚òî"""
                                else:
                                    response = """Ng√†y kia s·∫Ω kh√¥ng m∆∞a, b·∫°n c√≥ th·ªÉ y√™n t√¢m! üòâ"""
                                    SlotSet('guess', None)
                            elif weatherType == 'n·∫Øng':
                                if conditionTomor == 'Clear' or conditionTomorDesc == 'few clouds' or conditionTomorDesc == 'scattered clouds':
                                    response = f"""Ng√†y mai s·∫Ω n·∫Øng ({afternoonTomorrow[0]['dt_txt'][0:10]}), b·∫°n n√™n d√πng kem ch·ªëng n·∫Øng"""
                                elif conditionCurrent == 'Clear' or conditionDesc == 'few clouds' or conditionDesc == 'scattered clouds':
                                    response = f"""Ng√†y kia s·∫Ω n·∫Øng ({afternoon[0]['dt_txt'][0:10]}), b·∫°n n√™n d√πng kem ch·ªëng n·∫Øng"""
                                elif (
                                        conditionTomor == 'Clear' or conditionTomorDesc == 'few clouds' or conditionTomorDesc == 'scattered clouds') and conditionCurrent == 'Clear' or conditionDesc == 'few clouds' or conditionDesc == 'scattered clouds':
                                    response = f"""Ng√†y kia s·∫Ω n·∫Øng c·∫£ ng√†y, b·∫°n c√≥ th·ªÉ y√™n t√¢m üòâ"""
                                else:
                                    response = """C·∫£ hai ng√†y s·∫Ω kh√¥ng c√≥ n·∫Øng, b·∫°n c√≥ th·ªÉ y√™n t√¢m! üòâ"""

                    else:
                        response = """Xin l·ªói, t√¥i ch·ªâ c√≥ th·ªÉ d·ª± b√°o th·ªùi ti·∫øt trong v√≤ng 2 ng√†y. H√£y mua g√≥i ChatBot VIP Member ƒë·ªÉ m·ªü kho√° d·ª± b√°o trong nhi·ªÅu ng√†y h∆°n nh√© üòâ"""

                else:
                    response = """C√≥ l·ªói g√¨ ƒë√≥ ƒë√£ x·∫£y ra v·ªõi API c·ªßa Weather Map, h√£y th·ª≠ l·∫°i sau nh√©!"""

            else:
                response = """Xin l·ªói, t√¥i kh√¥ng th·ªÉ l·∫•y t·ªça ƒë·ªô t·ª´ OpenWeatherApi, h√£y th·ª≠ l·∫°i sau nh√©!"""

        dispatcher.utter_message(response)

        return [SlotSet('location', loc), SlotSet('guess', None)]
